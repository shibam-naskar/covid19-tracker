{"version":3,"sources":["logo.svg","components/dataall.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","useStyles","makeStyles","table","minWidth","BasicTable","useState","count","setcount","rows","setrows","total","settotal","headernames","a","get","then","response","data","console","log","catch","error","useEffect","getData","classes","className","map","ind","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","id","href","target","IconButton","GitHub","LinkedIn","Facebook","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3735600.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../App.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Facebook, GitHub, LinkedIn } from \"@material-ui/icons\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function BasicTable() {\r\n  const [count, setcount] = useState(true);\r\n  const [rows, setrows] = useState([]);\r\n  const [total, settotal] = useState([]);\r\n  const headernames = [\"ACTIVE\", \"CONFIRMED\", \"DEATHS\", \"RECOVERED\"];\r\n  useEffect(() => {\r\n    if (count === true) {\r\n      getData();\r\n    }\r\n  });\r\n\r\n  async function getData() {\r\n    axios\r\n      .get(\"https://data.covid19india.org/data.json\")\r\n      .then(function (response) {\r\n        setrows(response.data[\"statewise\"]);\r\n        settotal([\r\n          response.data[\"statewise\"][0][\"active\"],\r\n          response.data[\"statewise\"][0][\"confirmed\"],\r\n          response.data[\"statewise\"][0][\"deaths\"],\r\n          response.data[\"statewise\"][0][\"recovered\"],\r\n        ]);\r\n        console.log(rows);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(function (error) {\r\n        setcount(false);\r\n      });\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className='NavbarUp'>\r\n        <h2 className=\"textnav\">COVID 19 STATUS INDIA</h2>\r\n      </div>\r\n      <div className=\"alldata\">\r\n        <div className=\"parentDiv\">\r\n          <div className=\"dataMain\">\r\n            {total.map((data, ind) => (\r\n              <div className={\"dataCard\" + (ind + 1)}>\r\n                <h1 className=\"heading\">{headernames[ind]}</h1>\r\n                <h1 className=\"numbers\">{data}</h1>\r\n              </div>\r\n            ))}\r\n            {/* <div className=\"dataCard1\">\r\n        <h1 className=\"heading\">ACTIVE</h1>\r\n        <h1 className=\"numbers\">{rows[0]['active']}</h1>\r\n      </div>\r\n      <div className=\"dataCard2\">\r\n        <h1 className=\"heading\">CONFIRMED</h1>\r\n        <h1 className=\"numbers\">{rows[0]['confirmed']}</h1>\r\n      </div>\r\n      <div className=\"dataCard3\">\r\n        <h1 className=\"heading\">DEATHS</h1>\r\n        <h1 className=\"numbers\">{rows[0]['deaths']}</h1>\r\n      </div>\r\n      <div className=\"dataCard4\">\r\n        <h1 className=\"heading\">RECOVERED</h1>\r\n        <h1 className=\"numbers\">{rows[0]['active']}</h1>\r\n      </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"tabledata\">\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>State</TableCell>\r\n                  <TableCell align=\"right\">Recovered</TableCell>\r\n                  <TableCell align=\"right\">Confirmed</TableCell>\r\n                  <TableCell align=\"right\">Active</TableCell>\r\n                  <TableCell align=\"right\">Deaths</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row[\"state\"]}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row[\"recovered\"]}</TableCell>\r\n                    <TableCell align=\"right\">{row[\"confirmed\"]}</TableCell>\r\n                    <TableCell align=\"right\">{row[\"active\"]}</TableCell>\r\n                    <TableCell align=\"right\">{row[\"deaths\"]}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div className=\"NavBar\">\r\n          <a href=\"https://github.com/shibam-naskar\" target=\"_blank\"><h2 className=\"textnav\">Made By Shibam Naskar</h2></a>\r\n          <div className=\"navicons\">\r\n            <a href=\"https://github.com/shibam-naskar\" target=\"_blank\">\r\n          <IconButton>\r\n            <GitHub/>\r\n          </IconButton>\r\n          </a>\r\n\r\n          <a href=\"https://www.linkedin.com/in/shibam-naskar-601433203/\" target=\"_blank\">\r\n          <IconButton>\r\n            <LinkedIn/>\r\n          </IconButton>\r\n          </a>\r\n\r\n          <a href=\"https://www.facebook.com/shibam.naskar.3/\" target=\"_blank\">\r\n          <IconButton>\r\n            <Facebook/>\r\n          </IconButton>\r\n          </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport BasicTable from './components/dataall';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"datradiv1\">\n    <div >\n    <BasicTable/>\n    </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}